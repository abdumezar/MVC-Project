@model IEnumerable<EmployeeViewModel>

@{
    // Bind data from view to layout
    ViewData["Title"] = "All Employees";

    // Bind data from controller to view
    // Enforce type Safty -> Requires Casting [Strong Typed] -- Faster
    //string VDAtaMessage = ViewData["Message"] as string;

    // Can't Enforce type Safty -> Requires Casting [Weakly Typed]
    //var VBagMessage = ViewBag.Messag;
}

@*<div class="alert alert-success">
    @ViewData["Message"]
</div>

<div class="alert alert-primary">
    @ViewBag.Messag
</div>*@


@if(TempData["Message"] is not null)
{
    <div class="alert alert-success">
        @TempData["Message"]
    </div>
}


<h1 class="my-3">All Employees</h1>

<a asp-action="Create" class="my-2 btn btn-primary">Add New Employee </a>

<div class="row justify-content-center align-items-center my-3">
    <form asp-action="Index" class="row col-8 offset-1">
        <div class="col-8">
            <input type="text" class="form-control" name="SearchValue" placeholder="Search For Employee By Name"/>
        </div>
        <div class="col-4">
            <input type="submit" value="Search" class="btn btn-success" />
        </div>
    </form>
</div>

@if (Model.Count() > 0)
{
    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <td>@Html.DisplayNameFor(D => D.Name)</td>
                <td>@Html.DisplayNameFor(D => D.Age)</td>
                <td>@Html.DisplayNameFor(D => D.Address)</td>
                <td>@Html.DisplayNameFor(D => D.Image)</td>
                <td>@Html.DisplayNameFor(D => D.Department)</td>
                <td>@Html.DisplayNameFor(D => D.Salary)</td>
                @*<td>@Html.DisplayNameFor(D => D.IsActive)</td>*@
                <td>@Html.DisplayNameFor(D => D.Email)</td>
                <td>@Html.DisplayNameFor(D => D.PhoneNumber)</td>
                <td>@Html.DisplayNameFor(D => D.HireDate)</td>

                <td>Details</td>
                <td>Update</td>
                <td>Delete</td>
            </tr>
        </thead>
        <tbody>
            @foreach(var employee in Model)
            {
                <tr>
                    <td>@employee.Name</td>
                    <td>@employee.Age</td>
                    <td>@employee.Address</td>
                    <td>
                        <img src="~/files/Images/@employee.ImageName" class="img-fluid rounded rounded-circle" alt="Employee Image" height="30" width="30"/>
                    </td>
                    @*<td>@employee.Department?.Name</td>*@
                    <td>@Html.DisplayFor(E => employee.Department.Name)</td>
                    <td>@Html.DisplayFor(E => employee.Salary)</td>
                    @*<td>@Html.DisplayFor(E => employee.IsActive)</td>*@
                    <td>@Html.DisplayFor(E => employee.Email)</td>
                    <td>@employee.PhoneNumber</td>
                    <td>@employee.HireDate</td>

                    <partial name="_ButtonsPartialView" model="@employee.Id.ToString()" />

                </tr>
            }
        </tbody>
    </table>
}
else{
    <div class="mt-4 alert alert-warning">
        <h3> There is No Employees!! </h3>
    </div>
}